// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  password       String
  name           String
  phone          String?
  role           Role      @default(USER)
  isActive       Boolean   @default(true)
  emailVerified  Boolean   @default(false)
  emailVerifiedAt DateTime?
  lastLoginAt    DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime? // Soft delete
  
  items     Item[]
  tokens    Token[]
  
  @@index([email])
  @@index([deletedAt])
}

model Item {
  id          String       @id @default(uuid())
  name        String
  description String?
  category    ItemCategory
  price       Float
  quantity    Int          @default(0)
  status      ItemStatus   @default(AVAILABLE)
  tags        String[]
  metadata    Json?
  
  userId      String
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  deletedAt   DateTime?    // Soft delete
  
  @@index([userId])
  @@index([category])
  @@index([status])
  @@index([deletedAt])
}

model Token {
  id           String    @id @default(uuid())
  token        String    @unique
  type         TokenType
  expiresAt    DateTime
  
  userId       String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  createdAt    DateTime  @default(now())
  
  @@index([token])
  @@index([userId])
  @@index([expiresAt])
}

enum Role {
  ADMIN
  USER
  MODERATOR
}

enum ItemCategory {
  ELECTRONICS
  CLOTHING
  FOOD
  BOOKS
  OTHER
}

enum ItemStatus {
  AVAILABLE
  OUT_OF_STOCK
  DISCONTINUED
}

enum TokenType {
  ACCESS
  REFRESH
}
