# ===========================================
# Environment Configuration Template
# ===========================================
# Copy this file to .env and update with your values:
#   cp .env.example .env
#
# SECURITY: Never commit .env to version control!
# ===========================================

# Node environment
# Options: development | production | test
NODE_ENV=development

# Server configuration
PORT=3000
HOST=0.0.0.0

# Logging level
# Options: fatal | error | warn | info | debug | trace | silent
LOG_LEVEL=info

# Service information
SERVICE_NAME=fastify-service
SERVICE_VERSION=1.0.0

# ===========================================
# Database Configuration (PostgreSQL)
# ===========================================
# Format: postgresql://user:password@host:port/database
# Example: postgresql://postgres:postgres@localhost:5432/mydb
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/ts_service_db

# ===========================================
# Redis Configuration (Optional)
# ===========================================
# Redis is used for distributed token storage
# If not configured, falls back to in-memory storage

# Option 1: Redis URL (recommended)
# REDIS_URL=redis://localhost:6379

# Option 2: Individual connection parameters
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
# REDIS_PASSWORD=your-redis-password

# ===========================================
# Security Configuration
# ===========================================

# JWT Secret - CRITICAL SECURITY REQUIREMENT!
# 
# ⚠️  MUST be changed in production!
# ⚠️  MUST be at least 64 characters
# ⚠️  MUST have high entropy (random characters)
#
# Generate secure secret:
#   openssl rand -base64 64
#
# In production, use a secrets manager (AWS Secrets Manager, HashiCorp Vault, etc.)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-min-64-chars-for-security-please-generate-random

# JWT token expiration times
# Format: 15s, 15m, 1h, 7d, etc.
JWT_ACCESS_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# API Key (optional)
# Used for service-to-service authentication
# API_KEY=your-api-key-here

# ===========================================
# CORS Configuration
# ===========================================
# In production, specify exact origins (comma-separated)
# Example: https://app.example.com,https://admin.example.com
#
# SECURITY WARNING: Wildcard (*) in production disables credentials!
CORS_ORIGIN=*

# ===========================================
# Feature Flags
# ===========================================
# Enable/disable features without code changes

# Enable Prometheus metrics endpoint
ENABLE_METRICS=false

# Enable /health endpoint
ENABLE_HEALTH_CHECK=true

# Enable Swagger API documentation at /docs
# Disable in production for security
ENABLE_SWAGGER=true

# Enable rate limiting
# Set to false only for development/testing
ENABLE_RATE_LIMIT=true

# ===========================================
# Rate Limiting Configuration
# ===========================================
# Maximum requests per time window
RATE_LIMIT_MAX=100

# Time window in milliseconds (default: 60000 = 1 minute)
RATE_LIMIT_TIMEWINDOW=60000

# ===========================================
# Docker Development (Optional)
# ===========================================
# These are used by docker-compose.dev.yml
# Override if default ports conflict

POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=ts_service_db
POSTGRES_PORT=5432

# ===========================================
# Testing Configuration
# ===========================================
# Test environment uses separate database
# Automatically configured by test scripts
# No need to change unless you have conflicts

# TEST_DATABASE_URL=postgresql://testuser:testpassword@localhost:5433/fastify_test
# E2E_BASE_URL=http://localhost:3001
