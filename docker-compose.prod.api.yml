# ============================================
# Production Docker Compose (API Service Only)
# ============================================
# Deploys ONLY the API service
# PostgreSQL and Redis are EXTERNAL (managed services)
#
# Prerequisites:
#   - PostgreSQL running externally (AWS RDS, DigitalOcean, etc.)
#   - Redis running externally (ElastiCache, Redis Cloud, etc.)
#   - .env file with DATABASE_URL and REDIS_URL
#
# Usage:
#   docker compose -f docker-compose.prod.api.yml up -d
#   docker compose -f docker-compose.prod.api.yml up -d --scale api=3
#   docker compose -f docker-compose.prod.api.yml logs -f

version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    image: ${IMAGE_NAME:-myapp-api}:${IMAGE_TAG:-latest}
    container_name: ${CONTAINER_NAME:-app-api}
    restart: unless-stopped
    
    environment:
      # Service Configuration
      NODE_ENV: production
      MODE: api                    # API only (no workers)
      PORT: ${PORT:-3000}
      HOST: 0.0.0.0
      
      # External Services (set in .env)
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_EXPIRES_IN: ${JWT_ACCESS_EXPIRES_IN:-15m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      
      # CORS (must be specific domains in production!)
      CORS_ORIGIN: ${CORS_ORIGIN}
      
      # Features
      ENABLE_SWAGGER: ${ENABLE_SWAGGER:-false}
      ENABLE_RATE_LIMIT: ${ENABLE_RATE_LIMIT:-true}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-100}
      RATE_LIMIT_TIMEWINDOW: ${RATE_LIMIT_TIMEWINDOW:-60000}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
      
      # Service Info
      SERVICE_NAME: ${SERVICE_NAME:-api-service}
      SERVICE_VERSION: ${SERVICE_VERSION:-1.0.0}
    
    ports:
      - "${API_PORT:-3000}:3000"
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Note: No networks or volumes needed if using external services
